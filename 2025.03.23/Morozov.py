from numpy import array, sqrt, mean, std, var
from scipy.stats import t as t_d, f, shapiro


def check_outliers(series: list, a = 0.05) -> str:
    """
    Проверяет, принадлежит ли крайний член выборки генеральной совокупности

    series - выборка
    a - уровень значимости
    """

    series = sorted(array(series))
    n = len(series)
    mean_s = mean(series)
    std_s = std(series, ddof = 1)
    r = (series[-1] - mean_s) / (std_s * sqrt((n-1)/n))
    df = n - 2
    r_crit = t_d.ppf(1 - a/2, df)


    if r < r_crit:
        return f'Поскольку r = {r:.2f} < r_crit = {r_crit:.2f}\nНулевая гипотеза принимается.\nИсследуемый член выборки не является промахом.'
    else:
        return f'Поскольку r = {r:.2f} > r_crit = {r_crit:.2f}\nНулевая гипотеза отвергается.\nИсследуемый член выборки является промахом.'


def check_var(series1: list, series2: list, a = 0.05) -> str:
    """
    Проверяет гипотезы о равенстве дисперсий

    series1 - первая выборка
    series2 - вторая выборка
    а - уровень значимости
    """

    series1, series2 = array(series1), array(series2)
    var1, var2 = var(series1, ddof = 1), var(series2, ddof = 1)
    F = var1 / var2 if var1 > var2 else var2 / var1
    df1 = len(series1) - 1
    df2 = len(series2) - 1
    F_crit = f.ppf(1 - a, df1, df2)

    if F < F_crit:
        return f'Поскольку F = {F:.2f} < F_crit = {F_crit:.2f}\nНулевая гипотеза принимается.\nЗначения, полученные по выборкам, не противоречат утверждению о статистическом равенстве дисперсий.'
    else:
        return f'Поскольку F = {F:.2f} > F_crit = {F_crit:.2f}\nНулевая гипотеза отвергается.\nЗначения, полученные по выборкам, противоречат утверждению о статистическом равенстве дисперсий.'


def check_mean(series1: list, series2: list, a = 0.05) -> str:
    """
    Проверяет гипотезы о равенстве средних значений

    series1 - первая выборка
    series2 - вторая выборка
    а - уровень значимости
    """

    mean1, mean2 = mean(series1), mean(series2)
    n1, n2  = len(series1), len(series2)
    var1, var2  = var(series1, ddof = 1), var(series2, ddof = 1)
    t = ((mean1 - mean2) / sqrt(((n1 - 1) * var1 + (n2 - 1) * var2) / (n1 + n2 - 2))) * sqrt(n1 * n2 / (n1+n2))
    df = n1 + n2 - 2
    t_crit = t_d.ppf(1 - a/2, df)

    if abs(t) < t_crit:

        return f'Поскольку t = {abs(t):.2f} < t_crit = {t_crit:.2f}\nНулевая гипотеза принимается.\nСредние значения выборок значимо не отличаются.'
    else:
        return f'Поскольку t = {abs(t):.2f} > t_crit = {t_crit:.2f}\nНулевая гипотеза отвергается.\nСредние значения выборок отличаются значимо.'


def check_normality(series: list, a = 0.05) -> str:
    """
    Провести проверку гипотезы о нормальном распределении c помощью теста Шапиро-Уилка

    series - выборка
    а - уровень значимости
    """

    sw_stat, sw_p = shapiro(series)
    print(sw_stat, sw_p)

    if sw_p > a:

        return f'Поскольку sw_p = {sw_p:.2f} > a = {a:.2f}\nНулевая гипотеза принимается.\nВыборка не противоречит нормальному закону распределения с вероятностью {(1 - a) * 100} %.'
    else:
        return f'Поскольку sw_p = {sw_p:.2f} > a = {a:.2f}\nНулевая гипотеза отвергается.\nВыборка противоречит нормальному закону распределения с вероятностью {(1 - a) * 100} %.'


#Поскольку r = 2.06 < r_crit = 2.31
#Нулевая гипотеза принимается.
#Исследуемый член выборки не является промахом.
#
#Поскольку r = 2.21 > r_crit = 2.18
#Нулевая гипотеза отвергается.
#Исследуемый член выборки является промахом.
#
#Поскольку F = 4.20 > F_crit = 2.71
#Нулевая гипотеза отвергается.
#Значения, полученные по выборкам, противоречат утверждению о статистическом равенстве дисперсий.
#
#Поскольку t = 6.08 > t_crit = 2.07
#Нулевая гипотеза отвергается.
#Средние значения выборок отличаются значимо.
#
#0.9610981191501383 0.798318664429108
#Поскольку sw_p = 0.80 > a = 0.05
#Нулевая гипотеза принимается.
#Выборка не противоречит нормальному закону распределения с вероятностью 95.0 %.
#
#Поскольку sw_p = 0.42 > a = 0.05
#Нулевая гипотеза принимается.
#Выборка не противоречит нормальному закону распределения с вероятностью 95.0 %.


